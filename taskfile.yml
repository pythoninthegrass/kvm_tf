version: "3.0"

set: ['e', 'u', 'pipefail']
shopt: ['globstar']

dotenv: ['.env']

env:
  BASE_URL: ${BASE_URL?}
  TLD:
    sh: git rev-parse --show-toplevel
  UNAME:
    sh: "uname -s"
  VENV_DIR: ".venv"

vars:

includes:
  docker:
    taskfile: ./taskfiles/docker.yml
    aliases: ["docker"]
  terraform:
    taskfile: ./taskfiles/terraform.yml
    aliases: ["tf"]

tasks:
  default:
    desc: "Default task"
    cmds:
      - task --list

  install-devbox:
    desc: "Install devbox"
    cmds:
      - |
        if ! [[ $(command -v devbox 2>/dev/null) ]]; then
          curl -fsSL https://get.jetify.com/devbox | bash
        fi
    run: once
    silent: true

  install:
    desc: "Install project dependencies"
    cmds:
      - |
        asdf plugin-add golang
        asdf install golang latest
    ignore_error: true

  init:
    desc: "Initialize project"
    dir: "tests"
    cmds:
      - go mod init github.com/pythoninthegrass/kvm_tf
      - go mod tidy
      - go get github.com/gruntwork-io/terratest/modules/terraform
    run: once
    ignore_error: true

  tflint-init:
    desc: "Initialize tflint"
    cmds:
      - tflint --init
    run: once
    ignore_error: true

  lint:
    desc: "Run linters"
    deps:
      - tflint-init
    cmds:
      - tflint
    ignore_error: true

  test:
    desc: "Run tests"
    deps:
      - init
    dir: "tests"
    cmds:
      - go test -v ./... -timeout 5m

  export-reqs:
    desc: "Export requirements"
    cmds:
      - uv pip freeze | uv pip compile - -o requirements.txt

  venv:
    desc: "Create virtual environment"
    cmds:
      - uv venv {{.VENV_DIR}} --allow-existing

  pyclean:
    desc: "Remove .pyc and __pycache__"
    cmds:
      - |
        args=(
          .
          --debris
          --verbose
          -i .devbox
        )
        case "{{.CLI_ARGS}}" in
          dry-run)
            pyclean "${args[@]}" --dry-run
            ;;
          *)
            pyclean "${args[@]}"
            ;;
        esac
